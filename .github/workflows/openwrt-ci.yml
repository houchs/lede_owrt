# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI

#on:
  #schedule:
    #- cron: 0 20 * * *

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: true
        default: 'false'
        
permissions:
  contents: read

jobs:

  build_openwrt:

    name: Build OpenWrt Firmware

    runs-on: ubuntu-latest

    steps:
      - name: Space cleanup and Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"

      - name: Checkout OpenWrt
        uses: actions/checkout@v3

      - name: Update feeds
        run: |
          sed -i 's/#src-git helloworld/src-git helloworld/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      #- name: SSH connection to Actions
        #uses: P3TERX/ssh2actions@v1.0.0
        #if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
        #env:
          #TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          #TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        
      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config
          cat >> .config <<EOF
          #
          # ========================固件定制部分========================
          #
          # 示例配置，下面是 diff.config 文件中的内容
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          CONFIG_ARIA2_BITTORRENT=y
          CONFIG_ARIA2_NOXML=y
          CONFIG_ARIA2_OPENSSL=y
          CONFIG_ARIA2_WEBSOCKET=y
          CONFIG_CGROUPFS_MOUNT_KERNEL_CGROUPS=y
          CONFIG_DOCKER_CGROUP_OPTIONS=y
          CONFIG_DOCKER_NET_MACVLAN=y
          CONFIG_DOCKER_OPTIONAL_FEATURES=y
          CONFIG_DOCKER_STO_EXT4=y
          CONFIG_KERNEL_CFQ_GROUP_IOSCHED=y
          CONFIG_KERNEL_CGROUP_DEVICE=y
          CONFIG_KERNEL_CGROUP_FREEZER=y
          CONFIG_KERNEL_CGROUP_HUGETLB=y
          CONFIG_KERNEL_CGROUP_NET_PRIO=y
          CONFIG_KERNEL_CGROUP_PERF=y
          CONFIG_KERNEL_EXT4_FS_POSIX_ACL=y
          CONFIG_KERNEL_EXT4_FS_SECURITY=y
          CONFIG_KERNEL_FS_POSIX_ACL=y
          CONFIG_KERNEL_HUGETLBFS=y
          CONFIG_KERNEL_HUGETLB_PAGE=y
          CONFIG_KERNEL_MEMCG_SWAP_ENABLED=y
          CONFIG_KERNEL_NET_CLS_CGROUP=y
          CONFIG_KERNEL_PERF_EVENTS=y
          CONFIG_KERNEL_TRANSPARENT_HUGEPAGE=y
          CONFIG_KERNEL_TRANSPARENT_HUGEPAGE_ALWAYS=y
          CONFIG_MAKE_TOOLCHAIN=y
          CONFIG_MUTT_IMAP=y
          CONFIG_MUTT_OPENSSL=y
          CONFIG_MUTT_POP=y
          CONFIG_OPENVPN_openssl_ENABLE_DEF_AUTH=y
          CONFIG_OPENVPN_openssl_ENABLE_FRAGMENT=y
          CONFIG_OPENVPN_openssl_ENABLE_LZ4=y
          CONFIG_OPENVPN_openssl_ENABLE_LZO=y
          CONFIG_OPENVPN_openssl_ENABLE_MULTIHOME=y
          CONFIG_OPENVPN_openssl_ENABLE_PF=y
          CONFIG_OPENVPN_openssl_ENABLE_PORT_SHARE=y
          CONFIG_OPENVPN_openssl_ENABLE_SMALL=y
          CONFIG_PACKAGE_acme=m
          CONFIG_PACKAGE_adblock=m
          CONFIG_PACKAGE_ahcpd=m
          CONFIG_PACKAGE_aliyundrive-fuse=y
          CONFIG_PACKAGE_aliyundrive-webdav=y
          CONFIG_PACKAGE_alsa-lib=m
          CONFIG_PACKAGE_alsa-ucm-conf=m
          CONFIG_PACKAGE_alsa-utils=m
          CONFIG_PACKAGE_amule=m
          CONFIG_PACKAGE_aria2=m
          CONFIG_PACKAGE_ariang=m
          CONFIG_PACKAGE_boost=y
          CONFIG_PACKAGE_boost-chrono=m
          CONFIG_PACKAGE_boost-date_time=y
          CONFIG_PACKAGE_boost-program_options=y
          CONFIG_PACKAGE_boost-random=m
          CONFIG_PACKAGE_boost-system=y
          CONFIG_PACKAGE_btrfs-progs=y
          CONFIG_PACKAGE_cgroupfs-mount=y
          CONFIG_PACKAGE_confuse=m
          CONFIG_PACKAGE_containerd=y
          CONFIG_PACKAGE_coreutils-timeout=m
          CONFIG_PACKAGE_docker=y
          CONFIG_PACKAGE_dockerd=y
          CONFIG_PACKAGE_fdisk=y
          CONFIG_PACKAGE_fdk-aac=m
          CONFIG_PACKAGE_frpc=m
          CONFIG_PACKAGE_frps=m
          CONFIG_PACKAGE_fuse-utils=y
          CONFIG_PACKAGE_gowebdav=m
          CONFIG_PACKAGE_ip6tables=y
          CONFIG_PACKAGE_ipt2socks=y
          CONFIG_PACKAGE_kmod-ac97=m
          CONFIG_PACKAGE_kmod-br-netfilter=y
          CONFIG_PACKAGE_kmod-dummy=y
          CONFIG_PACKAGE_kmod-fs-btrfs=y
          CONFIG_PACKAGE_kmod-fuse=y
          CONFIG_PACKAGE_kmod-ip6tables=y
          CONFIG_PACKAGE_kmod-ipt-nat6=y
          CONFIG_PACKAGE_kmod-ipt-physdev=y
          CONFIG_PACKAGE_kmod-ledtrig-audio=m
          CONFIG_PACKAGE_kmod-lib-raid6=y
          CONFIG_PACKAGE_kmod-lib-xor=y
          CONFIG_PACKAGE_kmod-lib-zstd=y
          CONFIG_PACKAGE_kmod-nf-ipt6=y
          CONFIG_PACKAGE_kmod-nf-ipvs=y
          CONFIG_PACKAGE_kmod-nf-log6=y
          CONFIG_PACKAGE_kmod-nf-nat6=y
          CONFIG_PACKAGE_kmod-nf-reject6=y
          CONFIG_PACKAGE_kmod-regmap-core=m
          CONFIG_PACKAGE_kmod-sound-core=m
          CONFIG_PACKAGE_kmod-sound-hda-codec-hdmi=m
          CONFIG_PACKAGE_kmod-sound-hda-codec-realtek=m
          CONFIG_PACKAGE_kmod-sound-hda-codec-via=m
          CONFIG_PACKAGE_kmod-sound-hda-core=m
          CONFIG_PACKAGE_kmod-sound-hda-intel=m
          CONFIG_PACKAGE_kmod-sound-i8x0=m
          CONFIG_PACKAGE_kmod-sound-mpu401=m
          CONFIG_PACKAGE_kmod-sound-via82xx=m
          CONFIG_PACKAGE_kmod-usb-audio=m
          CONFIG_PACKAGE_kmod-usb-printer=m
          CONFIG_PACKAGE_kmod-veth=y
          CONFIG_PACKAGE_lame-lib=m
          CONFIG_PACKAGE_libao=m
          CONFIG_PACKAGE_libavahi-compat-libdnssd=m
          CONFIG_PACKAGE_libbfd=m
          CONFIG_PACKAGE_libbz2=m
          CONFIG_PACKAGE_libconfig=m
          CONFIG_PACKAGE_libcryptopp=m
          CONFIG_PACKAGE_libedit=m
          CONFIG_PACKAGE_libevent2=m
          CONFIG_PACKAGE_libffmpeg-full=m
          CONFIG_PACKAGE_libfuse=y
          CONFIG_PACKAGE_libgcrypt=m
          CONFIG_PACKAGE_libgdbm=m
          CONFIG_PACKAGE_libgpg-error=m
          CONFIG_PACKAGE_libltdl=m
          CONFIG_PACKAGE_liblzo=y
          CONFIG_PACKAGE_libopus=m
          CONFIG_PACKAGE_libpcre2-16=m
          CONFIG_PACKAGE_libplist=m
          CONFIG_PACKAGE_libpng=m
          CONFIG_PACKAGE_libprotobuf-c=m
          CONFIG_PACKAGE_libseccomp=y
          CONFIG_PACKAGE_libsoxr=m
          CONFIG_PACKAGE_libsqlite3=m
          CONFIG_PACKAGE_libunistring=m
          CONFIG_PACKAGE_libupnp=m
          CONFIG_PACKAGE_libwxbase=m
          CONFIG_PACKAGE_libxml2=m
          CONFIG_PACKAGE_luci-app-acme=m
          CONFIG_PACKAGE_luci-app-adblock=m
          CONFIG_PACKAGE_luci-app-advanced-reboot=m
          CONFIG_PACKAGE_luci-app-ahcp=m
          CONFIG_PACKAGE_luci-app-airplay2=m
          CONFIG_PACKAGE_luci-app-aliyundrive-fuse=y
          CONFIG_PACKAGE_luci-app-aliyundrive-webdav=y
          CONFIG_PACKAGE_luci-app-amule=m
          CONFIG_PACKAGE_luci-app-argon-config=m
          CONFIG_PACKAGE_luci-app-aria2=m
          CONFIG_PACKAGE_luci-app-docker=y
          CONFIG_PACKAGE_luci-app-dockerman=y
          CONFIG_PACKAGE_luci-app-frpc=m
          CONFIG_PACKAGE_luci-app-frps=m
          CONFIG_PACKAGE_luci-app-music-remote-center=m
          CONFIG_PACKAGE_luci-app-netdata=m
          CONFIG_PACKAGE_luci-app-openvpn=m
          CONFIG_PACKAGE_luci-app-openvpn-server=m
          CONFIG_PACKAGE_luci-app-qbittorrent=m
          CONFIG_PACKAGE_luci-app-qbittorrent-simple=m
          CONFIG_PACKAGE_luci-app-rclone=y
          CONFIG_PACKAGE_luci-app-shairplay=m
          CONFIG_PACKAGE_luci-app-socat=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_IPT2Socks=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Shadowsocks_V2ray_Plugin=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
          CONFIG_PACKAGE_luci-app-transmission=m
          CONFIG_PACKAGE_luci-app-usb-printer=m
          CONFIG_PACKAGE_luci-app-webdav=m
          CONFIG_PACKAGE_luci-compat=y
          CONFIG_PACKAGE_luci-i18n-acme-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-adblock-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-advanced-reboot-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-ahcp-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-airplay2-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-aliyundrive-fuse-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-aliyundrive-webdav-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-amule-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-argon-config-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-aria2-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-docker-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-dockerman-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-frpc-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-frps-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-music-remote-center-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-netdata-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-openvpn-server-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-openvpn-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-qbittorrent-simple-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-qbittorrent-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-rclone-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-socat-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-transmission-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-usb-printer-zh-cn=m
          CONFIG_PACKAGE_luci-lib-docker=y
          CONFIG_PACKAGE_luci-theme-argon=y
          CONFIG_PACKAGE_luci-theme-argon-mod=y
          CONFIG_PACKAGE_luci-theme-design=y
          CONFIG_PACKAGE_luci-theme-material=y
          CONFIG_PACKAGE_luci-theme-netgear=y
          CONFIG_PACKAGE_mount-utils=y
          CONFIG_PACKAGE_msmtp=y
          CONFIG_PACKAGE_mutt=y
          CONFIG_PACKAGE_mxml=m
          CONFIG_PACKAGE_netdata=m
          CONFIG_PACKAGE_openvpn-easy-rsa=m
          CONFIG_PACKAGE_openvpn-openssl=m
          CONFIG_PACKAGE_owntone=m
          CONFIG_PACKAGE_p910nd=m
          CONFIG_PACKAGE_qBittorrent-static=m
          CONFIG_PACKAGE_qbittorrent=m
          CONFIG_PACKAGE_qt5-core=m
          CONFIG_PACKAGE_qt5-network=m
          CONFIG_PACKAGE_qt5-sql=m
          CONFIG_PACKAGE_qt5-xml=m
          CONFIG_PACKAGE_rblibtorrent=m
          CONFIG_PACKAGE_rclone=y
          CONFIG_PACKAGE_rclone-config=y
          CONFIG_PACKAGE_rclone-ng=y
          CONFIG_PACKAGE_rclone-webui-react=y
          CONFIG_PACKAGE_runc=y
          CONFIG_PACKAGE_shairplay=m
          CONFIG_PACKAGE_shairport-sync-openssl=m
          CONFIG_PACKAGE_socat=y
          CONFIG_PACKAGE_sqlite3-cli=m
          CONFIG_PACKAGE_tini=y
          CONFIG_PACKAGE_transmission-daemon-openssl=m
          CONFIG_PACKAGE_transmission-web-control=m
          CONFIG_PACKAGE_trojan=y
          CONFIG_PACKAGE_v2ray-plugin=y
          CONFIG_SQLITE3_COLUMN_METADATA=y
          CONFIG_SQLITE3_DYNAMIC_EXTENSIONS=y
          CONFIG_SQLITE3_FTS3=y
          CONFIG_SQLITE3_FTS4=y
          CONFIG_SQLITE3_FTS5=y
          CONFIG_SQLITE3_JSON1=y
          CONFIG_SQLITE3_LIBEDIT=y
          CONFIG_SQLITE3_RTREE=y
          CONFIG_VHDX_IMAGES=y
          CONFIG_boost-compile-visibility-hidden=y
          CONFIG_boost-runtime-shared=y
          CONFIG_boost-static-and-shared-libs=y
          CONFIG_boost-variant-release=y
          #
          # ========================固件定制部分结束========================
          #
          EOF
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
          # 网络配置信息，将从 zzz-default-settings 文件的第2行开始添加
          sed -i "2i # network config" ./package/lean/default-settings/files/zzz-default-settings
          # 默认 IP 地址，旁路由时不会和主路由的 192.168.1.1 冲突
          sed -i "3i uci set network.lan.ipaddr='192.168.2.2'" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "4i uci set network.lan.proto='static'" ./package/lean/default-settings/files/zzz-default-settings # 静态 IP
          sed -i "5i uci set network.lan.type='bridge'" ./package/lean/default-settings/files/zzz-default-settings  # 接口类型：桥接
          sed -i "6i uci set network.lan.ifname='eth0'" ./package/lean/default-settings/files/zzz-default-settings  # 网络端口：默认 eth0，第一个接口
          sed -i "7i uci set network.lan.netmask='255.255.255.0'" ./package/lean/default-settings/files/zzz-default-settings    # 子网掩码
          sed -i "8i uci set network.lan.gateway='192.168.2.1'" ./package/lean/default-settings/files/zzz-default-settings  # 默认网关地址（主路由 IP）
          sed -i "9i uci set network.lan.dns='192.168.2.1'" ./package/lean/default-settings/files/zzz-default-settings  # 默认上游 DNS 地址
          sed -i "10i uci commit network\n" ./package/lean/default-settings/files/zzz-default-settings
        #run: make defconfig

      - name: Download packages
        run: make download -j16

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Upload buildinfo
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Upload package
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Upload firmware
        uses: actions/upload-artifact@v3
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/
